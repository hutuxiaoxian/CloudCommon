package ${package.Entity};

#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
#if(${swagger2})
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end

##import com.baomidou.mybatisplus.annotation.TableName;
##import com.zhishouwei.common.model.entity.BaseEntity;
import lombok.Data;
import javax.persistence.Entity;
##import javax.persistence.Table;
##import java.io.Serializable;

/**
 * @Author: auto generate by hutu
 * @Create: ${date}
 */

@Entity
@Data
#if(${table.convert})
@TableName("${table.name}")
#end
#if(${swagger2})
@ApiModel(value="${entity}对象", description="$!{table.comment}")
#end
public class ${entity} extends BaseEntity {
    #if(${entitySerialVersionUID})
    private static final long serialVersionUID = 1L;
    #end
    ## ----------  BEGIN 字段循环遍历  ----------
    #foreach($field in ${table.fields})

    #if(${field.keyFlag})
    #set($keyPropertyName=${field.propertyName})
    #end
    #if("$!field.comment" != "")
    #if(${swagger2})
    @ApiModelProperty(value = "${field.comment}")
    #else
    /**
    * ${field.comment}
    */
    #end
    #end
    #if(${field.keyFlag})
    ## 主键
    #if(${field.keyIdentityFlag})
    @TableId(value = "${field.annotationColumnName}", type = IdType.AUTO)
    #elseif(!$null.isNull(${idType}) && "$!idType" != "")
    @TableId(value = "${field.annotationColumnName}", type = IdType.${idType})
    #elseif(${field.convert})
    @TableId("${field.annotationColumnName}")
    #end
    ## 普通字段
    #elseif(${field.fill})
    ## -----   存在字段填充设置   -----
    #if(${field.convert})
    @TableField(value = "${field.annotationColumnName}", fill = FieldFill.${field.fill})
    #else
    @TableField(fill = FieldFill.${field.fill})
    #end
    #elseif(${field.convert})
    @TableField("${field.annotationColumnName}")
    #end
    #if(${versionFieldName}==${field.name})## 乐观锁注解
    @Version
    #end
    #if(${logicDeleteFieldName}==${field.name})## 逻辑删除注解
    @TableLogic
    #end
    private ${field.propertyType} ${field.propertyName};
    #end
    ## ----------  END 字段循环遍历  ----------

    #if(!${entityLombokModel})
    #foreach($field in ${table.fields})
    #if(${field.propertyType.equals("boolean")})
    #set($getprefix="is")
    #else
    #set($getprefix="get")
    #end

    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

    #if(${chainModel})
    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
    #else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
    #end
        this.${field.propertyName} = ${field.propertyName};
    #if(${chainModel})
        return this;
    #end
    }
    #end
    ## --foreach end---
    #end
    ## --end of #if(!${entityLombokModel})--

    #if(${entityColumnConstant})
    #foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} = "${field.name}";

    #end
    #end
    #if(${activeRecord})
    @Override
    protected Serializable pkVal() {
    #if(${keyPropertyName})
        return this.${keyPropertyName};
    #else
        return null;
    #end
    }

    #end
    #if(!${entityLombokModel})
    @Override
    public String toString() {
        return "${entity}{" +
    #foreach($field in ${table.fields})
    #if($!{foreach.index}==0)
        "${field.propertyName}=" + ${field.propertyName} +
    #else
        ", ${field.propertyName}=" + ${field.propertyName} +
    #end
    #end
        "}";
    }
    #end
}